# upper():
# როდესაც ამ ფუნქციას გამოვიყენებთ, ყველა ასო, რაც სტრინგშია, დიდ ასოებად გარდაიქმნება. მაგალითად, თუ გვაქვს სიტყვა "hello", ამის გამოყენების შემდეგ მას ექნება სახე "HELLO".

# .lower():
# ეს ფუნქცია ყველა ასოს პატარა ასოებად გარდაქმნის. მაგალითად, თუ გვაქვს სიტყვა "HELLO", მისი გამოყენების შემდეგ ჩვენ მივიღებთ "hello".

# .capitalize()
# როდესაც ამ ფუნქციას გამოვიყენებთ, სტრინგის პირველი ასო დიდად გარდაიქმნება, ხოლო ყველა სხვა ასო მცირე იქნება. მაგალითად, "hello world"-ის გამოყენების შემდეგ მივიღებთ "Hello world".

# .swapcase():
# ეს ფუნქცია მასტიმავს ტექსტის შემთხვევას: დიდი ასოები პატარა ასოებით, ხოლო პატარა ასოები დიდით. მაგალითად, "Hello World" გახდება "hELLO wORLD".

# .find(substring):
# ამ ფუნქციის მეშვეობით შეგვიძლია დავადგინოთ, სად არის მოცემული სიტყვა სტრინგში. თუ სიტყვა მოიძებნება, მიგვიყვანს ინდექსი (არითმეტიკული ადგილი), სადაც იგი იწყება. თუ სიტყვა არ მოიძებნება, ფუნქცია -1-ის მნიშვნელობას დააბრუნებს. მაგალითად, "hello world"-ში "world" იწყება 6-დან, ხოლო "python" არ არის და ამას -1 გვიბრუნებს.

# len():
# ეს ფუნქცია ითვლის, რამდენი სიმბოლოა სტრინგში, მათ შორის, ცარიელი ადგილებიც. მაგალითად, "hello" გააჩნია 5 სიმბოლო, ამიტომ len("hello") 5-ს მოგვცემს.
# სიების ფუნქციები

# .append(element):
# როდესაც ამ ფუნქციას გამოვიყენებთ სიაში, ეს შინაარსში ახალი ელემენტს დაამატებს. მაგალითად, თუ სიაში გვაქვს [1, 2, 3] და გამოვიყენებთ append(4), სიაში მოიძებნება [1, 2, 3, 4].

# .insert(index, element):
# ეს ფუნქცია საშუალებას გვაძლევს ახალი ელემენტი დამატებული იყოს მითითებულ ინდექსზე (ადგილზე) სიაში. მაგალითად, თუ ჩვენს სიაში [1, 2, 3] გვაქვს, insert(1, 5) დაამატებს 5-ს ინდექსზე 1 და სია გახდება [1, 5, 2, 3].

# .pop(index):
# ეს ფუნქცია ამოიღებს ელემენტს სიიდან, და თუ ინდექსი არ არის მითითებული, ის ყოველთვის უკანასკნელ ელემენტს ამოიყვანს. მაგალითად, თუ სიაში გვაქვს [1, 2, 3] და გამოვიყენებთ pop(), სიიდან გამოვა 3 და სია გახდება [1, 2].